{"ast":null,"code":"var _jsxFileName = \"/home/vishakha/Documents/Project using ReactJS/Project-InstaTwitter/minitwitter/frontend/src/Components/Menu.js\";\nimport React, { Component } from 'react';\nimport './Menu.css';\nimport history from './../history';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom'; // import history from './../history';\n// This component will render the navigation menu , tweet box on upper side and  search bar\n\nexport class Menu extends Component {\n  constructor(props) {\n    super(props);\n\n    this.clickEventProfile = event => {\n      event.preventDefault();\n      history.push('/UserProfile');\n    };\n\n    this.clickEventHome = event => {\n      event.preventDefault();\n      history.push('/HomePage');\n    };\n\n    this.clickEventFollowers = event => {\n      event.preventDefault();\n      history.push('/Followers');\n    };\n\n    this.clickEventFollowings = event => {\n      event.preventDefault();\n      history.push('/Followings');\n    };\n\n    this.clickEventPostTweet = event => {\n      console.log(this.state);\n      axios.post('http://127.0.0.1:8000/Menu/Tweets/', this.state).then(response => {\n        console.log(response);\n\n        if (response['status'] == 200) {\n          alert('Tweet Posted');\n          history.push('/UserProfile');\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.clickEventLogout = event => {\n      localStorage.clear('token');\n      axios.post('http://127.0.0.1:8000/Menu/', this.state).then(response => {\n        console.log(response); // will return 200 code if token is null\n\n        if (response['status'] == 200) {\n          event.preventDefault();\n          history.push('/');\n        }\n      }).catch(error => {\n        if (error['status'] == 504) {\n          console.log('State:Logged Out');\n          history.push('/');\n        } else {\n          console.log('State:Logged In');\n        }\n      });\n    };\n\n    this.followUserBtn = (user, event) => {\n      console.log(user);\n      const followuser = {\n        token: this.state.token,\n        otheruser: user\n      };\n      this.setState({\n        isUnfollow: true\n      });\n      axios.post('http://127.0.0.1:8000/Menu/Follow/', followuser).then(response => {\n        console.log(response); // will return 200 code if token is null\n\n        if (response['status'] == 200) {\n          console.log('Followed Successfully!');\n          history.push('/HomePage');\n        }\n      }).catch(error => {\n        if (error.response['status'] == 406) {\n          console.log('already followed');\n          alert('User already followed!');\n          history.push('/Followings');\n        } else if (error.response['status'] == 400) {\n          console.log('following yourself');\n          alert('You cannot follow yourself!');\n          history.push('/UserProfile');\n        }\n      });\n    };\n\n    this.viewProfileBtn = (user, event) => {\n      console.log(user);\n      localStorage.setItem('otheUserName', user);\n      history.push('/OtherUserProfile');\n    };\n\n    this.changeEvent = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      console.log(value.length);\n      this.setState({\n        tweetError: null\n      });\n\n      if (value.length > 100) {\n        this.setState({\n          tweetError: \"oops.. Tweet is too long!\"\n        });\n      }\n\n      if (value.length == 0) {\n        this.setState({\n          tweetError: \"oops.. Tweet is Empty!\"\n        });\n      }\n\n      this.setState({\n        tweets: event.target.value\n      });\n    };\n\n    this.componentDidMount = () => {\n      axios.post('http://127.0.0.1:8000/Menu/Allusers/', this.state).then(response => {\n        console.log(response);\n        const {\n          allUsers,\n          dummy\n        } = this.state;\n        const setusername = response.data[0];\n        const userArray = response.data[1]; // console.log(userArray)\n        // Object.values(userArray)\n        // this.setState({allUsers:response.data[1]})\n        // console.log(allUsers)\n\n        this.setState({\n          username: setusername.username,\n          firstname: setusername.firstname,\n          lastname: setusername.lastname,\n          allUsers: Object.values(userArray)\n        }); // this.setState({\n        //     dummy:response.data[1]\n        // })\n        // console.log(dummy)\n        // for(var i=0;i<userArray.length;i++){\n        //     this.setState({\n        //         excluded:userArray[0]\n        //     })\n        //     // excluded.push(userArray['i'])\n        // // }\n        // console.log('excluded',excluded)\n        // this.setState({\n        //     allUsers:response.data[1]\n        // })\n        // console.length(allUsers)\n      });\n    };\n\n    this.state = {\n      username: 'user',\n      firstname: 'first name',\n      lastname: 'last name',\n      tweets: null,\n      allUsers: [],\n      otheruser: 'user',\n      isUnfollow: '',\n      tweetError: \"\",\n      token: localStorage.getItem('token'),\n      excluded: [],\n      dummy: {}\n    }; // this.followUserBtn.bind(this)\n  } // on click function to open the profile of user\n\n\n  render() {\n    const {\n      tweets,\n      allUsers,\n      isUnfollow\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sideMenu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"user-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 25\n      }\n    }, this.state.username), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 25\n      }\n    }, this.state.firstname, \" \", this.state.lastname, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"./logo.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.clickEventHome,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 25\n      }\n    }, \"Home\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.clickEventProfile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 25\n      }\n    }, \"Profile\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.clickEventFollowers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 26\n      }\n    }, \"Followers\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.clickEventFollowings,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 25\n      }\n    }, \"Following\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.clickEventLogout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 26\n      }\n    }, \"Logout\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tweetContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tweetBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"top-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 25\n      }\n    }, \"InstaTwitter\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      value: tweets,\n      name: \"tweets\",\n      placeholder: \"What's Happening?\",\n      onChange: this.changeEvent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 36\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"tweetError\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 25\n      }\n    }, this.state.tweetError), this.state.tweetError == null ? /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.clickEventPostTweet,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 29\n      }\n    }, \"Post Tweet\") : null))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"searchUser\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"searchBar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 25\n      }\n    }, \"Search\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"users\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      id: \"other-users-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 29\n      }\n    }, allUsers.map(user => /*#__PURE__*/React.createElement(\"div\", {\n      id: \"for-each\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 36\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      key: user.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      onClick: () => {\n        this.viewProfileBtn(user);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"other-user-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 93\n      }\n    }, user)), isUnfollow == true ? /*#__PURE__*/React.createElement(\"button\", {\n      id: \"follow-button\",\n      onClick: () => {\n        this.unfollowUserBtn(user);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 49\n      }\n    }, \"Unfollow\") : /*#__PURE__*/React.createElement(\"button\", {\n      id: \"follow-button\",\n      onClick: () => {\n        this.followUserBtn(user);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 49\n      }\n    }, \"follow\")))))))));\n  }\n\n}\nexport default Menu;","map":{"version":3,"sources":["/home/vishakha/Documents/Project using ReactJS/Project-InstaTwitter/minitwitter/frontend/src/Components/Menu.js"],"names":["React","Component","history","axios","Link","Menu","constructor","props","clickEventProfile","event","preventDefault","push","clickEventHome","clickEventFollowers","clickEventFollowings","clickEventPostTweet","console","log","state","post","then","response","alert","catch","error","clickEventLogout","localStorage","clear","followUserBtn","user","followuser","token","otheruser","setState","isUnfollow","viewProfileBtn","setItem","changeEvent","name","value","target","length","tweetError","tweets","componentDidMount","allUsers","dummy","setusername","data","userArray","username","firstname","lastname","Object","values","getItem","excluded","render","map","id","unfollowUserBtn"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './Menu.css'\nimport history from './../history';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n// import history from './../history';\n\n\n// This component will render the navigation menu , tweet box on upper side and  search bar\n\nexport class Menu extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            username:'user',\n            firstname:'first name',\n            lastname:'last name',\n            tweets:null,\n            allUsers:[],\n            otheruser:'user',\n            isUnfollow:'',\n            tweetError:\"\",\n            token:localStorage.getItem('token'),\n            excluded:[],\n            dummy:{}\n        }\n        // this.followUserBtn.bind(this)\n    }\n    \n\n    // on click function to open the profile of user\n    clickEventProfile=event=>{\n\n        event.preventDefault();\n        history.push('/UserProfile')\n\n    }\n    \n    // onclick function to provide home page which displays the timeline\n    clickEventHome=event=>{\n\n        event.preventDefault();\n        history.push('/HomePage')\n\n    }\n\n    // onclick function to provide Followers page which displays the list of followers\n    clickEventFollowers=event=>{\n\n        event.preventDefault();\n        history.push('/Followers')\n\n    }\n\n     // onclick function to provide Followings page which displays the list of followings\n    clickEventFollowings=event=>{\n\n        event.preventDefault();\n        history.push('/Followings')\n\n    }\n\n     // onclick function to post the tweet \n    clickEventPostTweet=event=>{\n\n\n        console.log(this.state)\n        axios\n        .post('http://127.0.0.1:8000/Menu/Tweets/',this.state)\n        .then(response=>{\n            console.log(response)\n            if(response['status']==200){\n\n                alert('Tweet Posted')\n                history.push('/UserProfile')  \n            }\n   \n        })\n        .catch(error=>{\n            console.log(error);\n        })\n        \n\n    }\n\n     // onclick function to logout \n\n    clickEventLogout=event=>{\n\n        localStorage.clear('token') \n        axios\n        .post('http://127.0.0.1:8000/Menu/',this.state)\n        .then(response=>{\n            console.log(response)    // will return 200 code if token is null\n            if(response['status']==200){\n\n                event.preventDefault();\n               history.push('/')\n\n            }\n            \n        })\n        .catch(error=>{\n            if(error['status']==504){\n                console.log('State:Logged Out')\n                history.push('/')\n            }\n            else{\n                console.log('State:Logged In')\n            }\n        })\n        \n    }\n\n    // onclick function to follow the user\n    followUserBtn=(user,event)=>{\n\n        console.log(user)\n        const followuser={\n            token:this.state.token,\n            otheruser:user\n\n        }\n        this.setState({\n            isUnfollow:true\n        })\n\n\n        axios\n        .post('http://127.0.0.1:8000/Menu/Follow/',followuser)\n        .then(response=>{\n            console.log(response)    // will return 200 code if token is null\n            if(response['status']==200){\n                console.log('Followed Successfully!')\n                history.push('/HomePage')\n\n            }\n            \n        })\n        .catch(error=>{\n            if(error.response['status']==406){\n                console.log('already followed')\n                alert('User already followed!')\n                history.push('/Followings')\n            }\n            else if(error.response['status']==400){\n                console.log('following yourself')\n                alert('You cannot follow yourself!')\n                history.push('/UserProfile')\n            }\n        })\n\n\n\n    }\n\n\n    // // onclick function to unfollow the user\n    // unfollowUserBtn=(user,event)=>{\n\n    //     console.log(user)\n    //     const unfollowuser={\n    //         token:this.state.token,\n    //         otheruser:user\n\n    //     }\n\n    //     axios\n    //     .post('http://127.0.0.1:8000/Menu/',unfollowuser)\n    //     .then(response=>{\n    //         console.log(response)    // will return 200 code if token is null\n    //         if(response['status']==200){\n    //            console.log('UnFollowed Successfully!')\n    //             history.push('/HomePage')\n\n    //         }\n            \n    //     })\n    //     .catch(error=>{\n    //         if(error.response['status']==406){\n    //             console.log('already unfollowed')\n    //             history.push('/Followings')\n    //         }\n    //         else if(error.response['status']==400){\n    //             console.log('unfollowing yourself')\n    //             history.push('/UserProfile')\n    //         }\n    //     })\n\n\n\n    // }\n\n\n    //onclick function to view the profile of other user\n    viewProfileBtn=(user,event)=>{\n\n        console.log(user)\n        localStorage.setItem('otheUserName',user)\n        history.push('/OtherUserProfile')\n\n\n    }\n\n     // onchange function to make the tweet from textarea present in upper menu part\n    changeEvent=event=>{\n        \n        const{name,value}=event.target\n        console.log(value.length)\n        this.setState({tweetError:null})\n        if(value.length>100){\n\n            this.setState({\n                tweetError:\"oops.. Tweet is too long!\"\n            })\n        }\n        if(value.length==0){\n\n            this.setState({\n                tweetError:\"oops.. Tweet is Empty!\"\n            })\n        }\n        \n        this.setState({\n            tweets:event.target.value\n        })\n\n        \n    }\n\n    // function  calls bydefault whenever this component will get call or get mount on screen\n    componentDidMount=()=>{\n\n        axios\n        .post('http://127.0.0.1:8000/Menu/Allusers/',this.state)\n        .then( response=>{\n                console.log(response)\n                const{allUsers,dummy}=this.state\n\n                const setusername=response.data[0]\n                const userArray=response.data[1]\n\n                // console.log(userArray)\n                // Object.values(userArray)\n                \n                // this.setState({allUsers:response.data[1]})\n                // console.log(allUsers)\n                \n\n                this.setState({\n                    username:setusername.username,\n                    firstname:setusername.firstname,\n                    lastname:setusername.lastname,\n                    allUsers:Object.values(userArray)\n                })\n\n\n                // this.setState({\n                //     dummy:response.data[1]\n                // })\n                // console.log(dummy)\n                // for(var i=0;i<userArray.length;i++){\n\n\n                //     this.setState({\n                //         excluded:userArray[0]\n                //     })\n\n                //     // excluded.push(userArray['i'])\n\n                // // }\n                // console.log('excluded',excluded)\n\n\n                // this.setState({\n                //     allUsers:response.data[1]\n                // })\n                // console.length(allUsers)\n\n\n\n        })\n    }\n\n\n    render() {\n\n        const{tweets,allUsers,isUnfollow}=this.state\n        \n        return (\n            <div className=\"Menu\">\n                {/* Renders the side menu */}\n                <div className=\"sideMenu\">\n                    <div id=\"user-info\">\n                        <div>{this.state.username}</div>\n                        <div>{this.state.firstname} {this.state.lastname} </div>\n                    </div>\n                    <div>\n                        <img src=\"./logo.png\"></img>\n                    </div>\n\n                    <div>\n                        <button type=\"button\" \n                        onClick={this.clickEventHome}>\n                            Home\n                        </button>\n                    </div>\n\n                    <div>\n                        <button type=\"button\" \n                        onClick={this.clickEventProfile}>\n                            Profile\n                        </button>\n                    </div>\n\n                    <div>\n                         <button type=\"button\" \n                         onClick={this.clickEventFollowers}>\n                             Followers\n                         </button>\n                    </div>\n\n                    <div>\n                        <button type=\"button\" \n                        onClick={this.clickEventFollowings}>\n                            Following\n                        </button>\n                    </div>\n\n                    {/* <div>\n                         <button type=\"button\">\n                             Post Tweet\n                         </button>\n                    </div> */}\n                    \n                    <div>\n                         <button type=\"button\" \n                         onClick={this.clickEventLogout}>\n                             Logout\n                        </button>\n                    </div>\n                \n\n                </div>\n                {/* Will render the upper part from where user can tweet */}\n                <div className=\"tweetContainer\">\n                    <div className=\"tweetBox\">\n                        <div id=\"top-label\">InstaTwitter</div>\n                        <form>\n                        <textarea\n                            value={tweets}\n                            name=\"tweets\"\n                            placeholder=\"What's Happening?\"\n                            onChange={this.changeEvent}>\n                        </textarea><br/><br/>\n                        <div id=\"tweetError\">{this.state.tweetError}</div>\n                       \n                        {\n                            this.state.tweetError==null ?\n                            <button type=\"button\"\n                            onClick={this.clickEventPostTweet}>Post Tweet</button> :\n                            null\n\n                        }\n                        {/* {\n                            this.state.tweetError==\"Empty Tweet\" ?\n                            <button type=\"button\"\n                            onClick={this.clickEventPostTweet}>Post Tweet</button> :\n                            null\n\n                        } */}\n                        \n                         </form>\n                        \n                    </div>\n                    {/* <div className=\"Pages\">\n                       \n                    </div> */}\n                    \n\n                </div>\n                {/* Will render search bar on opposite side of navigation menu */}\n                <div className=\"searchUser\">\n                    <div className=\"searchBar\">\n                        <input type=\"text\"\n                        placeholder=\"Search\">\n                        </input>\n                        <button type=\"button\">\n                            Search\n                        </button>\n\n                        <div className=\"users\">\n                            <h4 id=\"other-users-list\">\n                            \n                             {allUsers.map(user => (\n                                   <div id=\"for-each\"> \n                                        <h4 key={user.id}>\n                                            <Link onClick={()=>{this.viewProfileBtn(user)}}><div id=\"other-user-name\">{user}</div></Link>\n                                            \n                                            {isUnfollow==true ?\n                                                <button id=\"follow-button\" onClick={()=>{this.unfollowUserBtn(user)}}>Unfollow</button>:\n                                                <button id=\"follow-button\" onClick={()=>{this.followUserBtn(user)}}>follow</button>}\n                                             {/* <button id=\"visit-profile-button\" onClick={()=>{this.viewProfileBtn(user)}}>Profile</button>  */}\n                                            \n                                        </h4>\n                                    </div> \n                                ))} \n                            </h4>\n                        </div>\n                    </div>\n\n\n                </div>\n\n                \n            </div>\n        )\n    }\n}\n\nexport default Menu\n"]},"metadata":{},"sourceType":"module"}