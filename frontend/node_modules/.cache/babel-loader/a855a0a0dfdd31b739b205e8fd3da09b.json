{"ast":null,"code":"var _jsxFileName = \"/home/vishakha/Documents/Project using ReactJS/Project-InstaTwitter/minitwitter/frontend/src/RegistrationPage.js\";\nimport React, { Component } from 'react';\nimport './RegistrationPage.css';\nimport history from './history';\nimport axios from 'axios'; // regular expression for validating email-id entered by user\n\nconst validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i); // function which returs boolean value by validating all the feilds and save the errors in the object error\n\nconst validateForm = errors => {\n  let valid = true;\n  Object.values(errors).forEach(val => val.length > 0 && (valid = false));\n  return valid;\n}; // component to render Register Page\n\n\nexport class RegistrationPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.clickEvent = event => {\n      event.preventDefault();\n      axios.post('http://127.0.0.1:8000/RegistrationPage/', this.state) // link of backend api\n      .then(response => {\n        console.log(response);\n\n        if (response['status'] === 201) {\n          console.info('Valid Form');\n          console.log(this.state);\n\n          if (response.data['token'] !== null) {\n            const userToken = response.data['token'];\n            localStorage.setItem('token', userToken);\n            alert(`Hey ${this.state.firstname}.... Registration Successful! `);\n            history.push('/NewUser'); //Rendering on next page\n          } else {\n            alert(`Server Error! `);\n            console.log('Token is empty');\n          }\n        }\n\n        if (response['status'] === 226) {\n          console.log(this.state);\n          alert(`Hey ${this.state.firstname}.... username already used! `);\n        }\n      }).catch(error => {// console.log(error.response['status']);\n        // if(error.response['status']  === 400){\n        //   console.log(this.state)\n        //   alert(`Empty feilds not allowed! `);\n        // }\n      });\n    };\n\n    this.onChangeEvent = event => {\n      event.preventDefault();\n      const {\n        name,\n        value\n      } = event.target;\n      let errors = this.state.errors; // for catching the error in object and rendering  appropriate warning on UI\n\n      switch (name) {\n        case 'firstname':\n          errors.firstname = value.length < 2 ? 'First Name must be 2 characters long!' : '';\n          break;\n\n        case 'lastname':\n          errors.lastname = value.length < 2 ? 'Last Name must be 2 characters long!' : '';\n          break;\n\n        case 'email':\n          errors.email = validEmailRegex.test(value) ? '' : 'Email is not valid!';\n          break;\n\n        case 'username':\n          errors.username = value.length < 5 ? 'First Name must be 5 characters long!' : '';\n          break;\n\n        case 'password':\n          errors.password = value.length < 8 ? 'Password must be 8 characters long!' : '';\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors,\n        [name]: value\n      }); // error object contains all the feilds as property which have validation error\n    };\n\n    this.state = {\n      username: null,\n      password: null,\n      email: null,\n      firstname: null,\n      lastname: null,\n      isDone: '',\n      errors: {\n        firstname: 'please enter name',\n        lastname: ' please enter last name',\n        username: 'please enter username',\n        email: 'please enter mail-id',\n        password: 'please set password'\n      }\n    };\n  } // Function to perform action on button click\n\n\n  render() {\n    const {\n      username,\n      password,\n      email,\n      firstname,\n      lastname,\n      isDone\n    } = this.state;\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"reg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      id: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, \"InstaTwitter\"), /*#__PURE__*/React.createElement(\"img\", {\n      src: \"./logo.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"registrationPage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 51\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"textRegister\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    }, \"Registration\"), /*#__PURE__*/React.createElement(\"h3\", {\n      id: \"tagline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    }, \"Create your account here!\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      id: \"registration-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }\n    }, \" Fisrt Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"first-name\",\n      placeholder: \"Enter First Name\",\n      name: \"firstname\",\n      value: firstname,\n      required: \"text\",\n      onChange: this.onChangeEvent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 25\n      }\n    }), errors.firstname.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 25\n      }\n    }, errors.firstname)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      id: \"registration-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"last-name\",\n      placeholder: \"Enter Last Name\",\n      name: \"lastname\",\n      value: lastname,\n      required: \"\",\n      onChange: this.onChangeEvent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 25\n      }\n    }), errors.lastname.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 25\n      }\n    }, errors.lastname)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      id: \"registration-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 25\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      placeholder: \"Enter Email ID \",\n      name: \"email\",\n      value: email,\n      required: \"\",\n      onChange: this.onChangeEvent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 25\n      }\n    }), errors.email.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 25\n      }\n    }, errors.email)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      id: \"registration-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 25\n      }\n    }, \"UserName\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"use-rname\",\n      placeholder: \"Enter username \",\n      name: \"username\",\n      value: username,\n      required: \"\",\n      onChange: this.onChangeEvent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 25\n      }\n    }), errors.username.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 25\n      }\n    }, errors.username)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      id: \"registration-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 25\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      id: \"pass-word\",\n      placeholder: \"Set Password of 8 Characters\",\n      name: \"password\",\n      value: password,\n      required: \"\",\n      onChange: this.onChangeEvent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 25\n      }\n    }), errors.password.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 25\n      }\n    }, errors.password)), errors.username == errors.lastname && errors.lastname == errors.username && errors.lastname == errors.email && errors.lastname == errors.password ? /*#__PURE__*/React.createElement(\"button\", {\n      id: \"btnSignIn\",\n      type: \"Submit\",\n      onClick: this.clickEvent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 22\n      }\n    }, \"Register\") : null))));\n  }\n\n}\nexport default RegistrationPage; //-----------------------------------------------------------------------\n// import React, { Component } from 'react'\n// import './RegistrationPage.css'\n// import history from './history';\n// // regular expression for validating email-id entered by user\n// const validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\n// // function which returs boolean value by validating all the feilds and save the errors in the object error\n// const validateForm = (errors) => {\n//     let valid = true;\n//     Object.values(errors).forEach(\n//       (val) => val.length > 0 && (valid = false)\n//     );\n//     return valid;\n//   }\n// // component to render Register Page\n// export class RegistrationPage extends Component {\n//     constructor(props) {\n//         super(props)\n//         this.state = {\n//              username:'',\n//              password:'',\n//              email:'',\n//              //phone:'',\n//              firstname:'',\n//              lastname:'',\n//             // dob:'',\n//              //userAccount:[],\n//              errors: {\n//                 firstname: '',\n//                 lastname:'',\n//                 // phone:'',\n//                 // dob:'',\n//                 username:'',\n//                 email: '',\n//                 password: '',\n//               }\n//         }\n//     }\n//     // Function to perform action on button click\n//     clickEvent=event=>{\n//         event.preventDefault();\n//         if(validateForm(this.state.errors)) {\n//           console.info('Valid Form')\n//           alert(`Hey ${this.state.firstname}.... Registration Successful! `);\n//             // this.state.userAccount.push(this.state);      // on successful registration object get stored in array userAccount\n//             console.log(this.state.userAccount);\n//             history.push('/LoginPage')      //Rendering on next page\n//         }else{\n//           console.error('Invalid Form')\n//         }\n//     }\n//     // Function to perform action for onchange event\n//     onChangeEvent=event=>{\n//     event.preventDefault();\n//     const { name, value } = event.target;\n//     let errors = this.state.errors;\n//     // for catching the error in object and rendering  appropriate warning on UI\n//     switch (name) {\n//       case 'firstname': \n//         errors.firstname = \n//           value.length < 2\n//             ? 'First Name must be 2 characters long!'\n//             : '';\n//         break;\n//       case 'lastname': \n//         errors.lastname = \n//           value.length < 2\n//             ? 'Last Name must be 2 characters long!'\n//             : '';\n//         break;\n//       /*case 'phone': \n//         errors.phone = \n//           value.length !== 10 \n//             ? 'Number should be of 10 digits!'\n//             : '';\n//         break;\n//       case 'dob': \n//         errors.dob = \n//           value.length !== 10 \n//             ? 'dob should be in dd-mm-yyyy format!'\n//             : '';\n//         break;*/\n//       case 'email': \n//         errors.email = \n//           validEmailRegex.test(value)\n//             ? ''\n//             : 'Email is not valid!';\n//         break;\n//       case 'username': \n//         errors.username = \n//           value.length < 5\n//             ? 'First Name must be 5 characters long!'\n//             : '';\n//         break;\n//       case 'password': \n//         errors.password = \n//           value.length < 8\n//             ? 'Password must be 8 characters long!'\n//             : '';\n//         break;\n//       default:\n//         break;\n//     }\n//     this.setState({errors, [name]: value}); // error object contains all the feilds as property which have validation error\n//        /* this.setState({\n//             [event.target.name]:event.target.value\n//         });*/\n//     }\n//     render() {\n//         const{username,password,email,firstname,lastname }=this.state\n//         const {errors} = this.state;\n//         return (\n//             <div className='reg'> \n//             <h1 id=\"title\">InstaTwitter</h1>\n//                 <img src=\"./logo.png\"></img>\n//             <div className=\"box\">\n//             <form>\n//                 <div className=\"registrationPage\"><br></br>\n//                     <div id=\"textRegister\">Registration</div>\n//                     <h3 id=\"tagline\">Create your account here!</h3>\n//                     <div>\n//                     <label> Fisrt Name</label>\n//                         <input\n//                         type=\"text\" \n//                         id=\"firstname\"\n//                         placeholder=\"Enter First Name\" \n//                         name=\"firstname\"\n//                         value={firstname}\n//                         required=\"text\"\n//                         onChange={this.onChangeEvent}>\n//                         </input>\n//                         {errors.firstname.length > 0 && \n//                         <span className='error'>{errors.firstname}</span>}\n//                     </div>\n//                     <div>\n//                     <label>Last Name</label>\n//                         <input type=\"text\" \n//                             id=\"lastname\" \n//                             placeholder=\"Enter Last Name\"\n//                             name=\"lastname\"\n//                             value={lastname}\n//                             required=\"\"\n//                             onChange={this.onChangeEvent}>\n//                         </input>\n//                         {errors.lastname.length > 0 && \n//                         <span className='error'>{errors.lastname}</span>}\n//                     </div>\n//                     <div>\n//                         <label>Email</label>\n//                         <input type=\"email\" \n//                             id=\"email\" \n//                             placeholder=\"Enter Email ID \"\n//                             name=\"email\"\n//                             value={email}\n//                             required=\"\"\n//                             onChange={this.onChangeEvent}>\n//                         </input>\n//                         {errors.email.length > 0 && \n//                         <span className='error'>{errors.email}</span>}\n//                     </div>\n//                     {/* <div> \n//                         <label>Phone Number</label>\n//                         <input type=\"text\" \n//                             id=\"phone\" \n//                             placeholder=\"Enter Phone Number \"\n//                             name=\"phone\"\n//                             value={phone}\n//                             required=\"\"\n//                             onChange={this.onChangeEvent}>\n//                         </input>\n//                         {errors.phone.length > 0 && \n//                         <span className='error'>{errors.phone}</span>}\n//                     </div>\n//                     <div>\n//                         <label>Date of Birth</label>\n//                         <input type=\"text\" \n//                             id=\"dob\" \n//                             placeholder=\"Enter Date of Birth in dd-mm-yyyy format\" \n//                             name=\"dob\"\n//                             value={dob}\n//                             required=\"\"\n//                             onChange={this.onChangeEvent}>\n//                         </input>\n//                         {errors.dob.length > 0 && \n//                         <span className='error'>{errors.dob}</span>}\n//                     </div>*/}\n//                     <div>\n//                         <label>UserName</label>\n//                         <input type=\"text\" \n//                             id=\"use-rname\" \n//                             placeholder=\"Enter username \"\n//                             name=\"username\"\n//                             value={username}\n//                             required=\"\"\n//                             onChange={this.onChangeEvent}>\n//                         </input>\n//                         {errors.username.length > 0 && \n//                         <span className='error'>{errors.username}</span>}\n//                     </div>\n//                     <div>\n//                         <label>Password</label>\n//                         <input type=\"password\" \n//                             id=\"pass-word\" \n//                             placeholder=\"Set Password of 8 Characters\" \n//                             name=\"password\"\n//                             value={password}\n//                             required=\"\"\n//                             onChange={this.onChangeEvent}>\n//                         </input>\n//                         {errors.password.length > 0 && \n//                         <span className='error'>{errors.password}</span>}\n//                     </div>\n//                     <button id=\"btnSignIn\" type=\"Submit\" onClick={this.clickEvent} >Register</button>\n//                  </div>\n//                 </form>\n//                 </div>  \n//             </div>\n//         )\n//     }\n// }\n// export default RegistrationPage","map":{"version":3,"sources":["/home/vishakha/Documents/Project using ReactJS/Project-InstaTwitter/minitwitter/frontend/src/RegistrationPage.js"],"names":["React","Component","history","axios","validEmailRegex","RegExp","validateForm","errors","valid","Object","values","forEach","val","length","RegistrationPage","constructor","props","clickEvent","event","preventDefault","post","state","then","response","console","log","info","data","userToken","localStorage","setItem","alert","firstname","push","catch","error","onChangeEvent","name","value","target","lastname","email","test","username","password","setState","isDone","render"],"mappings":"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":["\n\nimport React, { Component } from 'react'\nimport './RegistrationPage.css'\nimport history from './history';\nimport axios from 'axios'\n\n// regular expression for validating email-id entered by user\nconst validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\n\n// function which returs boolean value by validating all the feilds and save the errors in the object error\nconst validateForm = (errors) => {\n    let valid = true;\n    Object.values(errors).forEach(\n      (val) => val.length > 0 && (valid = false)\n    );\n    return valid;\n  }\n\n// component to render Register Page\nexport class RegistrationPage extends Component {\n    constructor(props) {\n        super(props)\n   \n        this.state = {\n             username:null,\n             password:null,\n             email:null,\n             firstname:null,\n             lastname:null,\n             isDone:'',\n             errors: {\n                firstname:'please enter name',\n                lastname:' please enter last name',\n                username:'please enter username',\n                email: 'please enter mail-id',\n                password:'please set password',\n              }\n\n        }\n    }\n\n    // Function to perform action on button click\n    clickEvent=event=>{\n\n        event.preventDefault();\n        \n        axios\n        .post('http://127.0.0.1:8000/RegistrationPage/',this.state) // link of backend api\n        .then(response=>{\n            console.log(response);\n           \n            if(response['status'] === 201){\n              console.info('Valid Form')\n              console.log(this.state)\n                if(response.data['token']!==null){\n\n                  const userToken=response.data['token']\n                  localStorage.setItem('token',userToken);\n                  alert(`Hey ${this.state.firstname}.... Registration Successful! `);\n                  history.push('/NewUser')      //Rendering on next page\n\n                }\n                else{\n\n                  alert(`Server Error! `);\n                  console.log('Token is empty')\n\n                }\n              \n \n            }\n            if(response['status'] === 226){\n              console.log(this.state)\n              alert(`Hey ${this.state.firstname}.... username already used! `);\n            }\n            \n           \n                     \n           \n\n        })\n        .catch(error=>{\n            // console.log(error.response['status']);\n\n            // if(error.response['status']  === 400){\n            //   console.log(this.state)\n            //   alert(`Empty feilds not allowed! `);\n            // }\n        })\n       \n    }\n\n    // Function to perform action for onchange event\n    onChangeEvent=event=>{\n\n    event.preventDefault();\n    const { name, value } = event.target;\n\n    let errors = this.state.errors;\n\n    // for catching the error in object and rendering  appropriate warning on UI\n    switch (name) {\n      case 'firstname':\n        errors.firstname =\n          value.length < 2\n            ? 'First Name must be 2 characters long!'\n            : '';\n        break;\n   \n      case 'lastname':\n        errors.lastname =\n          value.length < 2\n            ? 'Last Name must be 2 characters long!'\n            : '';\n        break;\n     \n      case 'email':\n        errors.email =\n          validEmailRegex.test(value)\n            ? ''\n            : 'Email is not valid!';\n        break;\n      case 'username':\n        errors.username =\n          value.length < 5\n            ? 'First Name must be 5 characters long!'\n            : '';\n        break;\n      case 'password':\n        errors.password =\n          value.length < 8\n            ? 'Password must be 8 characters long!'\n            : '';\n        break;\n      default:\n        break;\n    }\n\n    this.setState({errors, [name]: value}); // error object contains all the feilds as property which have validation error\n\n\n    \n\n    }\n   \n   \n    render() {\n        const{username,password,email,firstname,lastname,isDone }=this.state\n        const {errors} = this.state;\n        return (\n            <div className='reg'>\n            <h1 id=\"title\">InstaTwitter</h1>\n                <img src=\"./logo.png\"></img>\n            <div className=\"box\">\n               \n            <form>\n               \n                <div className=\"registrationPage\"><br></br>\n                    <div id=\"textRegister\">Registration</div>\n                    <h3 id=\"tagline\">Create your account here!</h3>\n                    <div>\n                    <label id=\"registration-label\"> Fisrt Name</label>\n                        <input\n                        type=\"text\"\n                        id=\"first-name\"\n                        placeholder=\"Enter First Name\"\n                        name=\"firstname\"\n                        value={firstname}\n                        required=\"text\"\n                        onChange={this.onChangeEvent}>\n                        </input>\n                        {errors.firstname.length > 0 &&\n                        <span className='error'>{errors.firstname}</span>}\n                   \n                    </div>\n                    <div>\n                    <label id=\"registration-label\">Last Name</label>\n                        <input type=\"text\"\n                            id=\"last-name\"\n                            placeholder=\"Enter Last Name\"\n                            name=\"lastname\"\n                            value={lastname}\n                            required=\"\"\n                            onChange={this.onChangeEvent}>\n                        </input>\n                        {errors.lastname.length > 0 &&\n                        <span className='error'>{errors.lastname}</span>}\n                    </div>\n                    <div>\n                        <label id=\"registration-label\">Email</label>\n                        <input type=\"email\"\n                            id=\"email\"\n                            placeholder=\"Enter Email ID \"\n                            name=\"email\"\n                            value={email}\n                            required=\"\"\n                            onChange={this.onChangeEvent}>\n                        </input>\n                        {errors.email.length > 0 &&\n                        <span className='error'>{errors.email}</span>}\n                    </div>\n                   \n                    <div>\n                        <label id=\"registration-label\">UserName</label>\n                        <input type=\"text\"\n                            id=\"use-rname\"\n                            placeholder=\"Enter username \"\n                            name=\"username\"\n                            value={username}\n                            required=\"\"\n                            onChange={this.onChangeEvent}>\n                        </input>\n                        {errors.username.length > 0 &&\n                        <span className='error'>{errors.username}</span>}\n                    </div>\n                    <div>\n                        <label id=\"registration-label\">Password</label>\n                        <input type=\"password\"\n                            id=\"pass-word\"\n                            placeholder=\"Set Password of 8 Characters\"\n                            name=\"password\"\n                            value={password}\n                            required=\"\"\n                            onChange={this.onChangeEvent}>\n                        </input>\n                   \n                        {errors.password.length > 0 &&\n                        <span className='error'>{errors.password}</span>}\n                    </div>\n                   \n                   \n                   {\n                     errors.username==errors.lastname && errors.lastname==errors.username && errors.lastname==errors.email && errors.lastname==errors.password  ?\n                     <button id=\"btnSignIn\" type=\"Submit\" onClick={this.clickEvent} >Register</button>:\n                     null\n                  }\n                    \n       \n       \n                 </div>\n               \n                </form>\n                </div>  \n            </div>\n        )\n    }\n}\n\nexport default RegistrationPage\n\n\n//-----------------------------------------------------------------------\n// import React, { Component } from 'react'\n// import './RegistrationPage.css'\n// import history from './history';\n\n// // regular expression for validating email-id entered by user\n// const validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\n\n// // function which returs boolean value by validating all the feilds and save the errors in the object error\n// const validateForm = (errors) => {\n//     let valid = true;\n//     Object.values(errors).forEach(\n//       (val) => val.length > 0 && (valid = false)\n//     );\n//     return valid;\n//   }\n\n// // component to render Register Page\n// export class RegistrationPage extends Component {\n//     constructor(props) {\n//         super(props)\n    \n//         this.state = {\n//              username:'',\n//              password:'',\n//              email:'',\n//              //phone:'',\n//              firstname:'',\n//              lastname:'',\n//             // dob:'',\n//              //userAccount:[],\n//              errors: {\n//                 firstname: '',\n//                 lastname:'',\n//                 // phone:'',\n//                 // dob:'',\n//                 username:'',\n//                 email: '',\n//                 password: '',\n//               }\n//         }\n//     }\n\n//     // Function to perform action on button click\n//     clickEvent=event=>{\n\n//         event.preventDefault();\n//         if(validateForm(this.state.errors)) {\n//           console.info('Valid Form')\n//           alert(`Hey ${this.state.firstname}.... Registration Successful! `);\n//             // this.state.userAccount.push(this.state);      // on successful registration object get stored in array userAccount\n//             console.log(this.state.userAccount);\n//             history.push('/LoginPage')      //Rendering on next page\n//         }else{\n//           console.error('Invalid Form')\n//         }\n        \n//     }\n\n//     // Function to perform action for onchange event\n//     onChangeEvent=event=>{\n\n//     event.preventDefault();\n//     const { name, value } = event.target;\n\n//     let errors = this.state.errors;\n\n//     // for catching the error in object and rendering  appropriate warning on UI\n//     switch (name) {\n//       case 'firstname': \n//         errors.firstname = \n//           value.length < 2\n//             ? 'First Name must be 2 characters long!'\n//             : '';\n//         break;\n    \n//       case 'lastname': \n//         errors.lastname = \n//           value.length < 2\n//             ? 'Last Name must be 2 characters long!'\n//             : '';\n//         break;\n//       /*case 'phone': \n//         errors.phone = \n//           value.length !== 10 \n//             ? 'Number should be of 10 digits!'\n//             : '';\n//         break;\n//       case 'dob': \n//         errors.dob = \n//           value.length !== 10 \n//             ? 'dob should be in dd-mm-yyyy format!'\n//             : '';\n            \n//         break;*/\n//       case 'email': \n//         errors.email = \n//           validEmailRegex.test(value)\n//             ? ''\n//             : 'Email is not valid!';\n//         break;\n//       case 'username': \n//         errors.username = \n//           value.length < 5\n//             ? 'First Name must be 5 characters long!'\n//             : '';\n//         break;\n//       case 'password': \n//         errors.password = \n//           value.length < 8\n//             ? 'Password must be 8 characters long!'\n//             : '';\n//         break;\n//       default:\n//         break;\n//     }\n\n//     this.setState({errors, [name]: value}); // error object contains all the feilds as property which have validation error\n\n\n\n\n\n//        /* this.setState({\n//             [event.target.name]:event.target.value\n//         });*/\n        \n\n//     }\n    \n    \n//     render() {\n//         const{username,password,email,firstname,lastname }=this.state\n//         const {errors} = this.state;\n//         return (\n//             <div className='reg'> \n//             <h1 id=\"title\">InstaTwitter</h1>\n//                 <img src=\"./logo.png\"></img>\n//             <div className=\"box\">\n                \n//             <form>\n                \n//                 <div className=\"registrationPage\"><br></br>\n//                     <div id=\"textRegister\">Registration</div>\n//                     <h3 id=\"tagline\">Create your account here!</h3>\n//                     <div>\n//                     <label> Fisrt Name</label>\n//                         <input\n//                         type=\"text\" \n//                         id=\"firstname\"\n//                         placeholder=\"Enter First Name\" \n//                         name=\"firstname\"\n//                         value={firstname}\n//                         required=\"text\"\n//                         onChange={this.onChangeEvent}>\n//                         </input>\n//                         {errors.firstname.length > 0 && \n//                         <span className='error'>{errors.firstname}</span>}\n                    \n//                     </div>\n//                     <div>\n//                     <label>Last Name</label>\n//                         <input type=\"text\" \n//                             id=\"lastname\" \n//                             placeholder=\"Enter Last Name\"\n//                             name=\"lastname\"\n//                             value={lastname}\n//                             required=\"\"\n//                             onChange={this.onChangeEvent}>\n//                         </input>\n//                         {errors.lastname.length > 0 && \n//                         <span className='error'>{errors.lastname}</span>}\n//                     </div>\n//                     <div>\n//                         <label>Email</label>\n//                         <input type=\"email\" \n//                             id=\"email\" \n//                             placeholder=\"Enter Email ID \"\n//                             name=\"email\"\n//                             value={email}\n//                             required=\"\"\n//                             onChange={this.onChangeEvent}>\n//                         </input>\n//                         {errors.email.length > 0 && \n//                         <span className='error'>{errors.email}</span>}\n//                     </div>\n//                     {/* <div> \n//                         <label>Phone Number</label>\n//                         <input type=\"text\" \n//                             id=\"phone\" \n//                             placeholder=\"Enter Phone Number \"\n//                             name=\"phone\"\n//                             value={phone}\n//                             required=\"\"\n//                             onChange={this.onChangeEvent}>\n//                         </input>\n//                         {errors.phone.length > 0 && \n//                         <span className='error'>{errors.phone}</span>}\n//                     </div>\n//                     <div>\n//                         <label>Date of Birth</label>\n//                         <input type=\"text\" \n//                             id=\"dob\" \n//                             placeholder=\"Enter Date of Birth in dd-mm-yyyy format\" \n//                             name=\"dob\"\n//                             value={dob}\n//                             required=\"\"\n//                             onChange={this.onChangeEvent}>\n//                         </input>\n//                         {errors.dob.length > 0 && \n//                         <span className='error'>{errors.dob}</span>}\n//                     </div>*/}\n//                     <div>\n//                         <label>UserName</label>\n//                         <input type=\"text\" \n//                             id=\"use-rname\" \n//                             placeholder=\"Enter username \"\n//                             name=\"username\"\n//                             value={username}\n//                             required=\"\"\n//                             onChange={this.onChangeEvent}>\n//                         </input>\n//                         {errors.username.length > 0 && \n//                         <span className='error'>{errors.username}</span>}\n//                     </div>\n//                     <div>\n//                         <label>Password</label>\n//                         <input type=\"password\" \n//                             id=\"pass-word\" \n//                             placeholder=\"Set Password of 8 Characters\" \n//                             name=\"password\"\n//                             value={password}\n//                             required=\"\"\n//                             onChange={this.onChangeEvent}>\n//                         </input>\n                    \n//                         {errors.password.length > 0 && \n//                         <span className='error'>{errors.password}</span>}\n//                     </div>\n                   \n                    \n                    \n//                     <button id=\"btnSignIn\" type=\"Submit\" onClick={this.clickEvent} >Register</button>\n        \n        \n//                  </div>\n                \n//                 </form>\n//                 </div>  \n//             </div>\n//         )\n//     }\n// }\n\n\n\n\n// export default RegistrationPage\n"]},"metadata":{},"sourceType":"module"}